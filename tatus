[1mdiff --git a/app/onboarding/page.tsx b/app/onboarding/page.tsx[m
[1mindex b304f6b..08ad1b5 100644[m
[1m--- a/app/onboarding/page.tsx[m
[1m+++ b/app/onboarding/page.tsx[m
[36m@@ -24,17 +24,13 @@[m [mexport default async function OnboardingIndexPage() {[m
 [m
   // If onboarding is complete, redirect to dashboard[m
   if (user.onboardingStatus === 'COMPLETED') {[m
[31m-    const dashboardUrl = user.role === 'HOST' ? '/dashboard/host' [m
[31m-      : user.role === 'INFLUENCER' ? '/dashboard/influencer' [m
[32m+[m[32m    const dashboardUrl = user.role === 'HOST' ? '/dashboard/host'[m
[32m+[m[32m      : user.role === 'INFLUENCER' ? '/dashboard/influencer'[m
       : '/dashboard'[m
     redirect(dashboardUrl)[m
   }[m
 [m
[31m-  // If onboarding is in progress, redirect to current step[m
[31m-  if (user.onboardingStep) {[m
[31m-    redirect(`/onboarding/${user.onboardingStep}`)[m
[31m-  }[m
[31m-[m
[31m-  // Default: start onboarding with role selection[m
[31m-  redirect('/onboarding/role-selection')[m
[32m+[m[32m  // For users in onboarding, always start at the beginning[m
[32m+[m[32m  // Individual steps will handle their own validation and forward/backward navigation[m
[32m+[m[32m  redirect('/onboarding/profile-setup')[m
 }[m
[1mdiff --git a/components/onboarding/steps/host/CollaborationSetup.tsx b/components/onboarding/steps/host/CollaborationSetup.tsx[m
[1mindex 5dd3763..86cf8ec 100644[m
[1m--- a/components/onboarding/steps/host/CollaborationSetup.tsx[m
[1m+++ b/components/onboarding/steps/host/CollaborationSetup.tsx[m
[36m@@ -178,13 +178,14 @@[m [mexport default function CollaborationSetup({ onComplete }: CollaborationSetupPro[m
         completeStep('collaboration-setup')[m
         setStep('complete')[m
 [m
[31m-        // Update the session token with fresh data from database[m
[32m+[m[32m        // Update session for the final redirect to dashboard[m
         await update()[m
 [m
         if (onComplete) {[m
           onComplete()[m
         } else {[m
[31m-          // Use full page navigation to ensure middleware sees the updated session[m
[32m+[m[32m          // For final dashboard redirect, use window.location to ensure[m
[32m+[m[32m          // session is fully refreshed since onboardingStatus changed to COMPLETED[m
           window.location.href = '/dashboard/host'[m
         }[m
       } else {[m
[1mdiff --git a/components/onboarding/steps/host/ListingWizard.tsx b/components/onboarding/steps/host/ListingWizard.tsx[m
[1mindex d232662..364aeeb 100644[m
[1m--- a/components/onboarding/steps/host/ListingWizard.tsx[m
[1m+++ b/components/onboarding/steps/host/ListingWizard.tsx[m
[36m@@ -181,14 +181,11 @@[m [mexport default function ListingWizard({ onComplete }: ListingWizardProps) {[m
         const nextStep = getNextStep('listing-creation', role!)[m
         setStep(nextStep)[m
 [m
[31m-        // Update the session token with fresh data from database[m
[31m-        await updateSession()[m
[31m-[m
         if (onComplete) {[m
           onComplete()[m
         } else {[m
[31m-          // Use full page navigation to ensure middleware sees the updated session[m
[31m-          window.location.href = `/onboarding/${nextStep}`[m
[32m+[m[32m          // Simple client-side navigation[m
[32m+[m[32m          router.push(`/onboarding/${nextStep}`)[m
         }[m
       } else {[m
         setErrors({ general: result.error || 'Failed to create listing' })[m
[1mdiff --git a/components/onboarding/steps/influencer/SocialMediaConnect.tsx b/components/onboarding/steps/influencer/SocialMediaConnect.tsx[m
[1mindex 5dd7fe4..84da55c 100644[m
[1m--- a/components/onboarding/steps/influencer/SocialMediaConnect.tsx[m
[1m+++ b/components/onboarding/steps/influencer/SocialMediaConnect.tsx[m
[36m@@ -155,7 +155,7 @@[m [mexport default function SocialMediaConnect({ onComplete }: SocialMediaConnectPro[m
     }[m
   }[m
 [m
[31m-  const handleContinue = async () => {[m
[32m+[m[32m  const handleContinue = () => {[m
     if (connectedAccounts.length === 0) {[m
       setError('Please connect at least one social media account')[m
       return[m
[36m@@ -168,13 +168,9 @@[m [mexport default function SocialMediaConnect({ onComplete }: SocialMediaConnectPro[m
     if (onComplete) {[m
       onComplete()[m
     } else {[m
[31m-      // Update the session token with fresh data from database[m
[31m-      // This ensures the JWT token includes the updated onboardingStep[m
[31m-      await updateSession()[m
[31m-[m
[31m-      // Use full page navigation to ensure middleware sees the updated session[m
[31m-      // The database was already updated when the social connection was created[m
[31m-      window.location.href = `/onboarding/${nextStep}`[m
[32m+[m[32m      // Simple client-side navigation - the database was already updated[m
[32m+[m[32m      // when the social connection was created, so just navigate[m
[32m+[m[32m      router.push(`/onboarding/${nextStep}`)[m
     }[m
   }[m
 [m
